% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/forecast_functions.R
\name{trainLM}
\alias{trainLM}
\title{Training a Forecasting Model with Linear Regression Framework}
\usage{
trainLM(
  input,
  y = NULL,
  x = NULL,
  seasonal = NULL,
  trend = list(linear = TRUE, exponential = FALSE, log = FALSE, power = FALSE),
  lags = NULL,
  splines = NULL,
  events = NULL,
  shocks = NULL,
  scale = NULL,
  step = FALSE,
  ...
)
}
\arguments{
\item{input}{A tsibble or ts object}

\item{y}{A character, the column name of the depended variable of the input object, required (and applicable) only when the input is tsibble object}

\item{x}{A character, the column names of the independent variable of the input object, applicable when using tsibble object with regressors}

\item{seasonal}{A character, optional, create categorical variable/s to model the single or multiple seasonal components. Supporting the
following frequencies structure:

`quarter` - for quarterly frequency

`month` - for monthly frequency

`week` - for weekly frequency

`yday` - for daily frequency

`wday` - for day of the week frequency

`hour` - for hourly frequency

The argument supports multiple seasonality cases such as daily and day of the week effect}

\item{trend}{A list, define the trend structure. Possible arguments -

`linear`, a boolean variable, if set to TRUE defines a linear trend (e.g., index of 1,2,3,...,t, for a series with t observations)

`power``, a numeric value, defines the polynomial degree of the series index (for example, a power = 0.5 define a square root index and power = 2 represents a squared index).
By default set to NULL

`exponential`, a boolean variable, if set to TRUE defines an exponential trend

`log`, a boolean variable, if set to TRUE defines a log transformation for the trend.

By default, the `trend` argument is set to a linear trend (i.e., power = 1)}

\item{lags}{A positive integer, defines the series lags to be used as input to the model (equivalent to AR process)}

\item{splines}{A list, optional, provides the ability to model structural shifts or breaks of the series trend with the use of spline or piecewise regression.
The argument enables to define either single or multiple splines /piecewise regression by setting for each one as a list with the following two arguments:

type - defines the spline feature. For model a linear trend for each segments, set the type argument as `linear`.
For a structural break or shift of the trend, set the type argument as `break`.

knots - a single or sequence of dates/time that represents the breaking point of the trend (either slope shift or structural break).
Note when using `tsibble`` object as input, the dates or time inputs must align with the series index class.
When using `ts` object, the input class should align with the converted index of the `ts`` object.
For example, if the frequency of the `ts` object is 12 (i.e., monthly), you should use `Date`` objects to set the knots}

\item{events}{A list, optional, create hot encoding variables based on date/time objects,
where the date/time objects must align with the input object index class (may not work when the input object is 'ts')}

\item{shocks}{A list, optional, enable to model a single or multiple shocks,
by defining for each shock a sub list with the following arguments:

type - defines the type of growth, can be either 'linear' or 'log' scale

start - defines the shock start date/time, must be within the time range of the input series. The class of this input must align with the ones of the input timestamp

end - defines the shock end date/time, and can be outside the range of the input seires. The class of this input must align with the ones of the input timestamp

peak - defines the peak of the shock date/time, and can be outside the range of the input seires. The class of this input must align with the ones of the input timestamp}

\item{scale}{A character, scaling options of the series, methods available -
c("log", "normal", "standard") for log transformation, normalization, or standardization of the series, respectively.
If set to NULL (default), no transformation will occur}

\item{step}{A boolean, if set to TRUE will use apply the stepwise function for variable selection using the \code{\link[stats]{step}} function}

\item{...}{Optional, a list of arguments to pass to the \code{\link[stats]{step}} function}
}
\description{
Methods for forecasting regular time series data based on a linear regression model
}
\details{
The trainLM function provides a flexible framework for forecasting regular time-series data with the linear regression model with the \code{\link[stats]{lm}} function.
The function arguments enable a fast extraction and generation of new features from the input series, such as seasonal, trend, lags, outliers, and special events.
}
\examples{
data(ny_gas)

head(ny_gas)

# Fitting basic model with linear trend
md1 <- trainLM(input = ny_gas,
               y = "y",
               trend = list(linear = TRUE))


# Getting the regression summary

summary(md1$model)

# Plotting the residauls of the model
plot_res(md1)

# Adding monthly seasonal component
md2 <- trainLM(input = ny_gas,
               y = "y",
               trend = list(linear = TRUE),
               seasonal = "month")


plot_res(md2)

# Adding the first and seasonal lags

md3 <- trainLM(input = ny_gas,
               y = "y",
               trend = list(linear = TRUE),
               seasonal = "month",
               lags = c(1, 12))

plot_res(md3)

# Adding more lags and using stepwise regression for variable selection
md4 <- trainLM(input = ny_gas,
               y = "y",
               trend = list(linear = TRUE),
               seasonal = "month",
               lags = c(1:12),
               step = TRUE)

summary(md4$model)

plot_res(md4)
}
